#this file is used to configure the simulator.
#Please read the explanations carefully as the simulator might not work under the wrong configuration.

#used for TSE-Simulator VERSION >= 1.5


#signatureAlgorithm: choose ECDSA or ECSDSA
signatureAlgorithm = ECSDSA

#hashMethod: choose SHA (for a SHA-2 hash algorithm) or SHA3 (for a SHA-3 hash algorithm)
hashMethod = SHA

#hashLength: choose 256 , 384 or 512
hashLength = 512

#ECC: choose one from BSI TR-03116-5 chapter 2.2. brainpoolP256r1, brainpoolP384r1, brainpoolP512r1, secp256r1, secp384r1 or secp521r1
#Please be aware, that due to the requirements made in BSI TR-03111, secp521r1 will not work.
curve = brainpoolP512r1

#updateTransactionMode: toggle between signed (signedUpdates) and unsigned (unsignedUpdates), see BSI TR-03153 and TR-03151 for details.
#Currently ONLY signed works. Unsigned will maybe implemented in a future release.
updateTransactionMode = signed

#keyDir: has to point to the directory where the keys are located. 
#additionally, the directory has to contain the certificates that are used to verify the logmessages created by the TSE.
keyDir	= keys

#privKey: name of the private key file which is used to sign the logmessages. There is only one for this simulator!
privKey = TSE-brainpoolP512r1.pem

#privKeyEncoding: format in which the private key is encoded, either DER or PEM
privKeyEncoding = PEM

#tseCert: name of the certificate file containing the TSE-certificate. The certificate has to be located in keyDir.
tseCert = 613E0EAFA452986B1B682D52AC03DA8AAE1770EE77B1E52223095AE27F448519_X509.pem

#tseCertEncoding: format in which the certificate of the TSE is encoded, either DER or PEM. 
tseCertEncoding = pem

#pathToUserlistPropertiesFile: points to where the properties file concerning the usermanagement is located. Has to point to exactly that 
pathToUserlistPropertiesFile = userlist.properties

#storageDir: stores the path to the directory which acts as the log message storage
#The storage stores all the created log messages and the information when the data is exported (that is the info.csv file and the TAR-archive).
storageDir = normalStoring

#persistentStorageDir: stores the path to the directory which acts as the persistent storage
#The persistent storage stores all values that the simulator needs to "remember" after a restart and the userData files.
persistentStorageDir = persistentStoring

#timeFormat: stores the chosen Format. 
#Currently ONLY "Unixt" works. In future releases, "Gent" for ASN.1 GeneralizedTime and "Utc" for ASN.1 UTCTime could be implemented.
#TimeFormat is used in the creation of the logmessage file names and for determining the return value of getTimeSyncVariant.
timeFormat = Unixt

#descriptionSetByManufacturer: stores if the description of the SEAPI has been set by the manufacturer
#Toggle between "true", the description has been set by the manufacturer, and "false", the description has not been set by the manufacturer.
descriptionSetByManufacturer = true

#maxNumberOfClients: stores the maximum number of clients that may use the simulator as their TSE. Has to be a positive integer >= 1, should not exceed Java.Integer.MAX_VALUE.
maxNumberOfClients = 1

#maxNumberOfTransactions: stores the maximum number of transactions that may be open at any given time. Has to be a positive integer >= 1, should not exceed Java.Integer.MAX_VALUE. 
maxNumberOfTransactions = 512
